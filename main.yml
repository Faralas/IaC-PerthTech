trigger :
- none

stages:

- stage: Terraform
  pool:
    vmImage: 'ubuntu-latest'
  jobs:
    - job: deploy_frontdoor
      steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@1
        displayName: 'Install Terraform latest'

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
        displayName: 'Terraform : azurerm'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          backendServiceArm: 'AI-TDA-SC'
          backendAzureRmResourceGroupName: tfstate
          backendAzureRmStorageAccountName: tfstatebackendlogsacc
          backendAzureRmContainerName: tfstate
          backendAzureRmKey: terraform.tfstate

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
        displayName: 'Terraform : azurerm'
        inputs:
          command: plan
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          environmentServiceNameAzureRM: 'AI-TDA-SC'
          backendServiceArm: 'AI-TDA-SC'
          backendAzureRmResourceGroupName: tfstate
          backendAzureRmStorageAccountName: tfstatebackendlogsacc
          backendAzureRmContainerName: tfstate
          backendAzureRmKey: terraform.tfstate

      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
        displayName: 'Terraform : azurerm'
        inputs:
          command: apply
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          environmentServiceNameAzureRM: 'AI-TDA-SC'
          backendServiceArm: 'AI-TDA-SC'
          backendAzureRmResourceGroupName: tfstate
          backendAzureRmStorageAccountName: tfstatebackendlogsacc
          backendAzureRmContainerName: tfstate
          backendAzureRmKey: terraform.tfstate